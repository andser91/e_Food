apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    role: db
  ports:
    - port: 3306
      targetPort: 3306

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  labels:
    app: mysql
data:
   MYSQL_ROOT_PASSWORD: rootpassword
   MYSQL_USER: mysqluser
   MYSQL_PASSWORD: mysqlpw

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  labels:
    app: mysql
data:
  initdb.sql: |
    create database consumers;
    GRANT ALL PRIVILEGES ON consumers.* TO 'mysqluser'@'%' WITH GRANT OPTION;
    create database kitchens;
    GRANT ALL PRIVILEGES ON kitchens.* TO 'mysqluser'@'%' WITH GRANT OPTION;
    create database orders;
    GRANT ALL PRIVILEGES ON orders.* TO 'mysqluser'@'%' WITH GRANT OPTION;
    create database restaurants;
    GRANT ALL PRIVILEGES ON restaurants.* TO 'mysqluser'@'%' WITH GRANT OPTION;
    create database login;
    GRANT ALL PRIVILEGES ON login.* TO 'mysqluser'@'%' WITH GRANT OPTION;

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      name: mysql
      labels:
        role: db
        app: postgres
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 3306
          envFrom:
            - configMapRef:
                name: mysql-config  
          volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
