server.port=8080

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=jdbc:mysql://${DOCKER_HOST_IP:localhost}/login
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpw
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#spring.flyway.url = jdbc:mysql://${DOCKER_HOST_IP:localhost}/login
# spring.flyway.schemas = public
# spring.flyway.user = mysqluser
# spring.flyway.password = mysqluser
# spring.flyway.validate-on-migrate=false
# spring.flyway.baseline-on-migrate=true

management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include = *

spring.kafka.bootstrap-servers=${DOCKER_HOST_IP:localhost}:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.isolation.level= read_committed

spring.zipkin.base-url=http://jaeger:9411
spring.sleuth.sampler.probability=1
spring.sleuth.messaging.kafka.enabled=true
spring.sleuth.trace-id128=true
spring.sleuth.opentracing.enabled=true