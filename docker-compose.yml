version: '3'
services:
  ###    POSTGRES    ####
  postgres-service:
    image: postgres:latest
    restart: always
    volumes:
      - ./Postgres:/docker-entrypoint-initdb.d
      - ./data:/var/lib/postgresql
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
  ###    ZOOKEEPER    ####
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  ###    KAFKA    ####
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - "zookeeper"
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "consumer-service-channel:1:1,restaurant-service-channel:1:1,order-service-channel:1:1"
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://172.17.0.1:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ###    CONSUMER-SERVICE    ####
  consumer-service:
    build: ConsumerService
    ports:
      - 8082:8080
    depends_on:
      - postgres-service
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service/consumers
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      JAVA_OPTS: -Xmx192m
  ###    RESTAURANT-SERVICE    ####
  restaurant-service:
    build: RestaurantService
    ports:
      - 8084:8080
    depends_on:
      - postgres-service
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service/restaurants
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      JAVA_OPTS: -Xmx192m
  ###    ORDER-SERVICE    ####
  order-service:
    build: OrderService
    ports:
      - 8083:8080
    depends_on:
      - postgres-service
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service/orders
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      JAVA_OPTS: -Xmx192m

