spring.application.name=api-gataway
server.port=8080

zuul.routes.consumer.url=http://consumer-service:8080
zuul.routes.restaurant.url=http://restaurant-service:8080
zuul.routes.order.url=http://order-service:8080
zuul.routes.kitchen.url=http://kitchen-service:8080


#Distributed Tracing
spring.zipkin.base-url=http://jaeger:9411
spring.sleuth.sampler.probability=1
spring.sleuth.messaging.kafka.enabled=true
spring.sleuth.trace-id128=true
spring.sleuth.opentracing.enabled=true

#MySQL
spring.datasource.url=jdbc:mysql://${DOCKER_HOST_IP:localhost}/login
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpw
spring.datasource.driver.class.name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.show-sql=true
spring.jta.enabled = false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect

management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include = *

#Kafka
spring.kafka.bootstrap-servers=${DOCKER_HOST_IP:localhost}:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.isolation.level= read_committed

logging.level.org.springframework.orm.jpa=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.asw.efood=DEBUG


jwt.header: X-Auth
jwt.secret: mySecret
jwt.expiration: 7200
