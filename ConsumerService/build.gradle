buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // classpath("org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:2.1.1")
        classpath "gradle.plugin.com.avast.gradle:gradle-docker-compose-plugin:0.9.1"
    }
}


plugins {
    id 'org.unbroken-dome.test-sets' version '2.1.1'
}
//per eseguire integration test viene aggiunto questo plugin 
apply plugin: 'docker-compose'

testSets {
    integrationTest { dirName = 'integration-test' }
}

//vengono specificati quali sono i container da tirare su durante il test
dockerCompose {
    useComposeFiles = ['../docker-compose-integration-test.yml']
}

dockerCompose.isRequiredBy(integrationTest)

integrationTest.doFirst {
    dockerCompose.exposeAsEnvironment(test)
}
dependencies {
    //Other project
    implementation project(":Swagger-Common")
    implementation project(":CommonEvent")
    implementation project(":ConsumerService-api")
    implementation project(":OrderService-api")
    implementation project(":Api-Gataway-api")
    //Distributed Tracing (sleuth + Zipkin + opentrace compatibility
    compile group: 'org.springframework.cloud', name: 'spring-cloud-sleuth-zipkin', version: '2.1.1.RELEASE'
    compile group: 'io.opentracing.brave', name: 'brave-opentracing', version: '0.33.11'

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    //Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //Postgres
    //implementation 'org.postgresql:postgresql'
    //MySQL
    implementation 'mysql:mysql-connector-java'

    //Micrometer
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'


    //Test
    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'io.rest-assured:spring-mock-mvc:3.3.0'
    testCompile "io.rest-assured:json-path:3.3.0"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
}
