# application.properties
# server
server.port=8080
spring.application.name=restaurant
# Postgres
#spring.jpa.database=POSTGRESQL
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
#spring.datasource.platform=postgres
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://${DOCKER_HOST_IP:localhost}/restaurants
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.generate-ddl=true

logging.level.org.springframework.orm.jpa=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.asw.efood=DEBUG
logging.file = /var/tmp/restaurant-service.log


#MySQL
spring.datasource.url=jdbc:mysql://${DOCKER_HOST_IP:localhost}/restaurants
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpw
spring.datasource.driver.class.name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.show-sql=true
spring.jta.enabled = false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect

#Kafka
spring.kafka.bootstrap-servers=${DOCKER_HOST_IP:localhost}:9092
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.isolation.level= read_committed

#Distributed Tracing
spring.zipkin.base-url=http://jaeger:9411
spring.sleuth.sampler.probability=1
spring.sleuth.messaging.kafka.enabled=true
spring.sleuth.trace-id128=true
spring.sleuth.opentracing.enabled=true